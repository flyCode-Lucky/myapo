<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		 http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
		http://www.springframework.org/schema/tx 
    	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 1.mybatis 配置：引入jdbc配置源 -->
	<context:property-placeholder
		location="classpath:db.properties" />


	<!-- 2.mybatis 配置：配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
	</bean>

	<!-- 3.mybatis 配置：配置sqlSessionFactory -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>

    
  <!-- 1.spring接管Mybatis配置：MapperScannerConfigurer依赖:mybatis-spring包 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- mybatis-spring组件的扫描器，com.dao(Mapper)只需要接口（接口方法与SQL映射文件中的相同） -->
        <property name="basePackage" value="com.sy.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>


	<!-- 1.springMvc的基本配置 -->
	<context:component-scan
		base-package="com.sy.service"></context:component-scan>
	<context:component-scan
		base-package=" com.sy.controller"></context:component-scan>
	
		
	<!-- 2.springMvc的开启注解配置 -->		
	<mvc:annotation-driven></mvc:annotation-driven>
	
	
	<!-- 3.springMvc的通配配置 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/view/pages/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	<!-- 配置该放行的资源文件 -->
	<mvc:default-servlet-handler/>
	<mvc:resources location="/view/css/" mapping="/css/**"></mvc:resources>
	<mvc:resources location="/view/img/" mapping="/img/**"></mvc:resources>
	<mvc:resources location="/view/js/" mapping="/js/**"></mvc:resources>
	<mvc:resources location="/view/plugins/" mapping="/plugin/**"></mvc:resources>
	
	
	<!-- 配置支持上传 id="multipartResolver" 是固定写法-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		 <!-- 请求编码格式 -->
    	 <property name="defaultEncoding" value="utf-8"></property>
    	 <!-- 上传文件大小(单位:字节) -->
         <property name="maxUploadSize" value="50000000"></property>
	</bean>
	
</beans>
